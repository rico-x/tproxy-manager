name: Build TPROXY-Manager via ipkg-build (OpenWrt 24.10)

on:
  push:
    branches: [ "main" ]
    tags: [ "v*" ]
    paths:
      - "pkg/**"
      - ".github/workflows/build-ipk.yml"
  workflow_dispatch: {}

permissions:
  contents: write

env:
  PKG_DIR: pkg/tproxy-manager-ipk

jobs:
  build-ipk:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Compute version
        id: ver
        shell: bash
        run: |
          if [[ "${GITHUB_REF_TYPE}" == "tag" ]]; then
            VER="${GITHUB_REF_NAME#v}"
          else
            VER="$(date -u +%Y.%m.%d)-${GITHUB_SHA::7}"
          fi
          echo "version=$VER" >> "$GITHUB_OUTPUT"

      - name: Install base tools
        run: |
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends \
            ca-certificates curl gzip tar coreutils findutils gawk sed perl zip

      - name: Fetch official ipkg-build (openwrt-24.10)
        run: |
          curl -fsSL https://raw.githubusercontent.com/openwrt/openwrt/openwrt-24.10/scripts/ipkg-build -o ipkg-build
          chmod +x ipkg-build
          ./ipkg-build -h || true

      - name: Normalize CONTROL/control and perms
        shell: bash
        run: |
          set -e
          CTRL="$PKG_DIR/CONTROL/control"
          [[ -f "$CTRL" ]] || { echo "Missing $CTRL"; exit 1; }
          # Убрать CRLF и BOM, обеспечить завершающую пустую строку
          sed -i 's/\r$//' "$CTRL" || true
          perl -0777 -pe 's/^\xEF\xBB\xBF//' -i "$CTRL" || true
          tail -c1 "$CTRL" | od -An -t x1 | grep -q '0a' || echo >> "$CTRL"
          # Проставить исполняемые биты на скриптах
          find "$PKG_DIR" -type f -path '*/etc/init.d/*' -exec chmod 0755 {} +
          find "$PKG_DIR" -type f -path '*/etc/uci-defaults/*' -exec chmod 0755 {} +
          [ -f "$PKG_DIR/CONTROL/postinst" ] && chmod 0755 "$PKG_DIR/CONTROL/postinst" || true
          [ -f "$PKG_DIR/CONTROL/prerm" ]    && chmod 0755 "$PKG_DIR/CONTROL/prerm"    || true
          [ -f "$PKG_DIR/usr/bin/xray-tproxy.sh" ] && chmod 0755 "$PKG_DIR/usr/bin/xray-tproxy.sh" || true

      - name: Inject Version into control
        shell: bash
        run: |
          CTRL="$PKG_DIR/CONTROL/control"
          if grep -q '^Version:' "$CTRL"; then
            sed -i "s/^Version:.*/Version: v${{ steps.ver.outputs.version }}_1-1/" "$CTRL"
          else
            echo "Version: v${{ steps.ver.outputs.version }}_1-1" >> "$CTRL"
          fi
          # На всякий случай вновь гарантируем завершающую пустую строку
          tail -c1 "$CTRL" | od -An -t x1 | grep -q '0a' || echo >> "$CTRL"

      - name: Build .ipk via ipkg-build (ABS dest)
        shell: bash
        env:
          LC_ALL: C
        run: |
          set -e
          DEST="$(pwd)/dist"     # абсолютный путь обязателен
          mkdir -p "$DEST"
          ./ipkg-build "$PKG_DIR" "$DEST"
          echo "--- dist content ---"
          ls -lah "$DEST"
          echo "--- quick check (ipk is tar.gz with 3 files) ---"
          file "$DEST"/*.ipk
          tar tzf "$DEST"/*.ipk | sed -n '1,10p'

      - name: Create versioned ZIP bundle
        shell: bash
        run: |
          set -e
          VER="${{ steps.ver.outputs.version }}"
          mkdir -p release
          (cd dist && sha256sum *.ipk > "SHA256SUMS_${VER}.txt")
          (cd dist && zip -9 "../release/tproxy-manager_${VER}.zip" *.ipk "SHA256SUMS_${VER}.txt")
          ls -lah release

      - name: Upload artifacts (versioned)
        uses: actions/upload-artifact@v4
        with:
          name: "tproxy-manager_${{ steps.ver.outputs.version }}"
          path: |
            dist/*.ipk
            release/*.zip
          if-no-files-found: error